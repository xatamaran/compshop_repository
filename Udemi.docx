HyperText Markup Language
----------------------------№13-----------------------------
<h1 (HTML Тег) class (Атрибут) = "red-text" (Значення)>Hello World (контент)</h1> (Елемент) (заголовок h1 to h6) 
----------------------------№14----------------------------
<p></p> (Параграф розділяє текст) 
----------------------------№15----------------------------
<hr /> (Горизонтальне правило (лінія)) 
<br /> (Переносить текст в інший рядок)
----------------------------№18----------------------------
<ul> (UnOrder List(. крапка))
<li>Milk</li>
<li>Eggs</li>
</ul>
<ol> (Order List(1,2,3 нумерація))
<li>Milk</li>
<li>Eggs</li>
</ol>
----------------------------№20----------------------------
<a href="url">Kontent</a> (Anchor Elemens(Hyper Link))
----------------------------№21----------------------------
<img src="https://picsum.photos/200" alt="alternative text desccription" /> (Image Element)
----------------------------№25----------------------------
/Project/Image/cat.png (Relative File Path)
../essay.cocx (попередня дерикторія)
./dog.png (дерикторія в якій знаходишся)
./Image/cat.png (вибір папки а потім зображення)
----------------------------№29----------------------------
GitHub Host


<div>Hello World</div> (Блок на всю ширину екрана)
<span>Beautiful</span> (влінію)








Cascading Style Sheets
----------------------------№33----------------------------
Inline Підключення CSS до HTML
<html (Тег) style (Атрибут)="color: (Property) blue" (Значення)></html>

Internal
<html><head><style>html (Selector) {color: blue;}</style></head></html>

External
<html><head><link rel="stylesheet" (Relationship) href="./styles.css" (Location) /></head></html>


----------------------------№34----------------------------
Element Selector  Параметри CSS до HTML
h1 (CSS Selector) (HTML тег) {
color: blue (Property: value)
}

Class Selector
.red-heading (Class Selector) {
color: blue (Property: value)
}

Id Selector
#main (id Selector) {
color: blue (Property: value)
}

Attribute Selector
p (HTML елемент) [draggable="false"] (Атрибут) {
color: blue (Property: value)
}

Universal Selector
* (вибрати все)  {
color: blue (Property: value)
}

----------------------------№38----------------------------
colorhunt.co - Палітра кольорів для сайту
color - Колір слів
background-color - Колір беграунд

----------------------------№39----------------------------
Font Properties Шрифти та розмір букв
h1 {
  color: blue; - Колір слів
  font-weight: bold;

  font-size: 20px; (1px -- 1/96th inch), (1pt -- 1/72nd inch), (1em -- 100% of parent), (1rem -- 100% of root)

  font-family: sans-serif; (fonts.google.com)

  text-align: center
}

----------------------------№41----------------------------
Параметри та значення в CSS
height: 100px; or 100%;      
width: 100px;
border: 10px (ширина) solid (стиль) black (колір);
border-top: 20px;
border-width: 10px (верхній) 10px (правий) 20px (нижній) 30px (лівий);
border-width: 10px (верхній, нижній) 10px (правий, лівий); 
padding: 20px; (проміжок між елементом та краєм)
margin: 20px; (проміжок між краєм та іншим елементом)

Content Division Element <div></div>


-----------------------------43------------------------
Cascading Stale Sheets Каскадне застосування параметрів

Position
li {
  color: red; (3)
  color: blue; (2)
}
li {color: red;} (1)

Speceficity
li {color: red;} (4)
.first-class {color: red;} (3)
li [draggable] {color: red;} (2)
#first-id {color: red;} (1)

Type
<link ref="stylesheet" href="./style.css"> (3)
<style> </style> (2)
<h1 style=" ">Hello</h1> (1)

Importance
color: red; (2)
color: green !Importance; (1)

-----------------------------44------------------------
Combining CSS Selectors  Один або декілька параметрів CSS
<p>Text</p>
<div class="bpox inner-box">
<p>Second text</p>
</div>

p{
  color: yellow;
}
.inner-box p (нащадок){
  color: white;
}
.inner-box, #id {
  color: white;
}
.inner-box (Батько)> p (Дитина) {
  color: white;
}
p.inner-box#id {
  color: white;
}

-----------------------------45------------------------
CSS Position  Позиція елементу відносно попереднього
position: static; (звичайне положення за замовчуванням)

position: relative; (віддаляє від звичайного положення за замовчуванням на 50 рх)
left:50px;
top:50px;

position: absolute; (позиція відносно до попереднього дів з relative або до верхнього лівого кута(рухається))
----
style="z-index: -1;"
-----
position: fixed; (позиція  до верхнього лівого кута браузера (нерухомо))

-----------------------------48------------------------
Розміщення елементів в рядок та блоки на весь розмір браузера

.h1 {
  display: inline; (Елементи розміщаються на одній лінії, не можливо вказати розмір, розмір є контент)
  display: inline-block;
  display: block;(Елементи розтягується на всю ширину браузера)
  display: none; (елемент зникає)
}

-----------------------------49------------------------
Обтікання картинки зліва або зправа
img {
  float: left;
}
img {
  float: right;
}
p {
  clear: lrft; (відміняє float)
  clear: both;
}


-----------------------------50----------------------------
-------------Responsive web design------------------------
Media query 
@media (max-width: 600px) {
  /* CSS ширина екрану не перевищує або рівна 600 px */
}
---------------------------------------------------------
CSS Grid
<div class="grid-container">
  <div class="first card"></div>
  <div class="card"></div>
  <div class="card"></div>
  <div class="card"></div>
  <div class="card"></div>
</div>

.grid-container {
    display: grid;
    grid-template-colums: 1fr 1 fr;
    grid-template-rows: 100px 200px 200px;
    gap: 30px;
}
.first {
  grid-colums: span 2;
}
.card {
  background-color: blue;
}

CSS Flexbox
<div class="flex-container">
  <div class="first card"></div>
  <div class="second card"></div>
  <div class="card"></div>
  <div class="card"></div>
  <div class="card"></div>
</div>

.flex-container {
    display: flex;
    grid-template-colums: 1fr 1 fr;
    grid-template-rows: 100px 200px 200px;
    gap: 30px;
}
.card {
  background-color: blue;
  border: 30px solid white;
  height: 100px;
  flex: 1;
}
.first {
  flex: 2;
}
.second {
  flex: 0.5;
}

Bootstrap Framework 12колонок


-----------------------------51----------------------------
Media query 
@media (min-width: 600px) and (max-width: 900px) {
  /* CSS для екрану між 600 та 900 */
  .second {
  flex: 0.5;
}
}
@media screen (orientation: landscape)  {
  /* CSS для телефонів */
}

-----------------------------54----------------------------
display: flex;  (контейнер на весь розмір монітору (всередині флексбокс розмір всіх елементів залежить від їх контенту))
gap: 10px;
display: inline-flex;  (контейнер має розмір в залежності від контенту)

-----------------------------55----------------------------
flex-direction: row; (напрямок зліва на право)
flex-direction: column; (напрямок зверху до низу)

flax-basis: 100px; (розтягує дитячий контейнер)

-----------------------------56----------------------------
.green {
  order: 1; (переміщає елементи вперед відносно попередніх елементів (за замовчуванням всі елементи мають order: 0))

  flex-wrap: nowrap; (застосовується в батьківському контейнері) (стоїть за замовчуванням і недозволяє переміщати елементи на новий рядок, а виходить за межі екрану)
  flex-wrap: wrap;

  justify-content: flex-end; (прибиває контент до правого краю)
  justify-content: flex-start;
  justify-content: flex-center;(контент по центру)
  justify-content: space-between;(ставить проміжки між контентом)

  align-item: flex-start; (вказує де буде починатися контент)
  height: 70vh; (розтягує коробку до низу на процент)
  align-self: flex-start; (дозволяє один елемент розмістити інакше від попередніх (застосовується в дитячому контейнері))
}

-----------------------------57----------------------------
Розміра контенту
Content width < flex-basis < min/max-width

flax-basis: 100px;
flex-grow: 1; (заповняє весь простір)
flexshrink: 1; (обрізає)


css-tricks.com/sippets/css/a-guide-to-flexbox/
developer.mozila.com

-----------------------------60----------------------------
Grid
<div class="grid-container">
  <div class="first card"></div>
  <div class="card"></div>
  <div class="card"></div>
  <div class="card"></div>
  <div class="card"></div>
</div>

.grid-container {
    display: grid;
    grid-template-colums: 1fr 1 fr;
    grid-template-rows: 1fr 1 fr; 
    gap: 30px;
}
.first {
  grid-colums: span 2;
}
.card {
  background-color: blue;
}

-----------------------------61----------------------------
.grid-container {
    display: grid;
    grid-template: 100px 200px / 400px 800px; (не змінює розмір при зміні ширини браузера)
    gap: 30px;
}

-----------------------------62----------------------------
Розмір грід
Fixed size
Auto sizeFraction size
MinMax Size
repeat (3, 100px)






-----------------------------2 серія----------------------------
.content_size {
  max-width: 1226px;
  margin: 0 auto;
}
